"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2272],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return u}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(t),u=r,g=m["".concat(o,".").concat(u)]||m[u]||d[u]||l;return t?a.createElement(g,s(s({ref:n},c),{},{components:t})):a.createElement(g,s({ref:n},c))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,s=new Array(l);s[0]=m;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<l;p++)s[p]=t[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3066:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return p},assets:function(){return c},toc:function(){return d},default:function(){return u}});var a=t(7462),r=t(3366),l=(t(7294),t(3905)),s=["components"],i={sidebar_position:2,title:"Basic Usage"},o=void 0,p={unversionedId:"usage",id:"usage",title:"Basic Usage",description:"The Scaffold",source:"@site/docs/usage.mdx",sourceDirName:".",slug:"/usage",permalink:"/BeAPI/docs/beta/usage",editUrl:"https://github.com/beapijs/BeAPI/tree/docs/docs/usage.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Basic Usage"},sidebar:"sidebar",previous:{title:"Getting Started",permalink:"/BeAPI/docs/beta/starting"},next:{title:"Migrating To V2",permalink:"/BeAPI/docs/beta/migrating"}},c={},d=[{value:"The Scaffold",id:"the-scaffold",level:2},{value:"Players Command",id:"players-command",level:2},{value:"Is That All?",id:"is-that-all",level:2}],m={toc:d};function u(e){var n=e.components,i=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},m,i,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"the-scaffold"},"The Scaffold"),(0,l.kt)("p",null,"Depending on whether you chose the Typescript\nor Javascript template; You might see something\na bit different. Its all the same concept though\njust slightly differing syntaxes."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/index.js"',title:'"src/index.js"'},"import { client } from 'beapi-core'\n\nclient.commands.register(\n  {\n    name: 'ping',\n    description: 'Ping gametest scripts.',\n    aliases: ['p'],\n  },\n  (data) => {\n    data.sender.sendMessage('\xa7ePong!')\n  },\n)\n")),(0,l.kt)("p",null,"Essentially what this is doing is importing client\nfrom BeAPI, calling the ",(0,l.kt)("a",{parentName:"p",href:"/docs/classes/commandmanager"},"CommandManager"),"\nand saying \"Hey, I want to make a new BeAPI command which responds with\n'Pong!' when used\"."),(0,l.kt)("p",null,"When you go in-game and use the command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"-help\n")),(0,l.kt)("p",null,"You should see something along the lines of this:\n",(0,l.kt)("img",{loading:"lazy",alt:"example",src:t(4987).Z,width:"1919",height:"299"})),(0,l.kt)("p",null,"And running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"-ping\n")),(0,l.kt)("p",null,"Will send:\n",(0,l.kt)("img",{loading:"lazy",alt:"example",src:t(8301).Z,width:"1920",height:"287"})),(0,l.kt)("h2",{id:"players-command"},"Players Command"),(0,l.kt)("p",null,"So lets say we want to register a new command that\nwill send us the current amount of players online\nand a list of all their names?"),(0,l.kt)("p",null,"First we need to register a new command. So below\n",(0,l.kt)("inlineCode",{parentName:"p"},"ping")," lets register a new command ",(0,l.kt)("inlineCode",{parentName:"p"},"players"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/index.js"',title:'"src/index.js"'},"client.commands.register(\n  {\n    name: 'players',\n    description: 'Send a list of all players online.',\n    aliases: ['p']\n  },\n  (data) => {\n    \n  }\n)\n")),(0,l.kt)("p",null,"Next we will want to get all players currently online\nand assign them to a variable. So inside the command callback.\nWe will add the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/index.js"',title:'"src/index.js"'},"client.commands.register(\n  {\n    name: 'players',\n    description: 'Send a list of all players online.',\n    aliases: ['p']\n  },\n  (data) => {\n    // Map all player values into an array.\n    const players = Array.from(client.players.getAll().values())\n  }\n)\n")),(0,l.kt)("p",null,"What this does is accesses BeAPIs ",(0,l.kt)("a",{parentName:"p",href:"/docs/classes/playermanager"},"PlayerManager"),"\nthrough the client and asks to retrieve all player. We then grab only the values\nfrom the map and put them in an array."),(0,l.kt)("p",null,"Then using some basic Javascript methods we can map the player names out of the\narray and join them into a string."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/index.js"',title:'"src/index.js"'},"client.commands.register(\n  {\n    name: 'players',\n    description: 'Send a list of all players online.',\n    aliases: ['p']\n  },\n  (data) => {\n    // Map all player values into an array.\n    const players = Array.from(client.players.getAll().values())\n    // Map out names into strings\n    const list = players.map((player) => `  - ${player.getName()}`).join('\\n')\n    \n  }\n)\n")),(0,l.kt)("p",null,"Finally we need to pipe all this data to the player. We can do so by accessing\nthe data parameter on the callback and accessing the ",(0,l.kt)("inlineCode",{parentName:"p"},"sender")," property to send\na message to the player."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/index.js"',title:'"src/index.js"'},"client.commands.register(\n  {\n    name: 'players',\n    description: 'Send a list of all players online.',\n    aliases: ['p']\n  },\n  (data) => {\n    // Map all player values into an array.\n    const players = Array.from(client.players.getAll().values())\n    // Map out names into strings\n    const list = players.map((player) => `  - ${player.getName()}`).join('\\n')\n    // Send data to user\n    data.sender.sendMessage(`There are currently ${players.length} players online:\\n${list}`)\n  }\n)\n")),(0,l.kt)("p",null,"Now make sure we save then run ",(0,l.kt)("inlineCode",{parentName:"p"},"npm run build")," to build our scripts."),(0,l.kt)("p",null,"Now in-game when we type the command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"-players\n")),(0,l.kt)("p",null,"we should see:\n",(0,l.kt)("img",{loading:"lazy",alt:"command",src:t(747).Z,width:"1920",height:"157"})),(0,l.kt)("h2",{id:"is-that-all"},"Is That All?"),(0,l.kt)("p",null,"No! BeAPI is a pretty powerful tool, what was shown above\nis only a small amount of what BeAPI is capable of."),(0,l.kt)("p",null,"Our primary goal is to polyfill features gametest does\nnot yet provide to give you (the developer) a better experience."))}u.isMDXComponent=!0},8301:function(e,n,t){n.Z=t.p+"assets/images/commands-example-ping-d7f6005915bbaf00ed5ae79e228be9d3.png"},747:function(e,n,t){n.Z=t.p+"assets/images/commands-example-players-50c36355b0e482821fd4b08a11c00bc3.png"},4987:function(e,n,t){n.Z=t.p+"assets/images/commands-example-cdc3284c0b218a6c1b0d841628c21292.png"}}]);